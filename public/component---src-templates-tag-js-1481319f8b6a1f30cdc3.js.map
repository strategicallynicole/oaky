{"version":3,"sources":["webpack://gatsby-starter-ghost/./src/components/Titles/h1.js","webpack://gatsby-starter-ghost/./src/templates/tag.js"],"names":["Title","props","titletext","bgtext","className","data-wow-delay","data-wow-duration","defaultProps","data","location","pageContext","tag","ghostTag","posts","allGhostPost","edges","type","name","description","map","node","key","id","post"],"mappings":"+IAiBMA,EAAQ,SAACC,GACX,IAAQC,EAAcD,EAAdC,UACAC,EAAWF,EAAXE,OAER,OACI,gCACI,uBAAKC,UAAU,UAAUD,GACzB,sBAAIC,UAAU,0BAA0BC,iBAAe,QAAQC,oBAAkB,UAC5EJ,KASjBF,EAAMO,aAAe,CACjBL,UAAU,IAId,O,+FC+BA,UA5CY,SAAC,GAAqC,IAAnCM,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACrBC,EAAMH,EAAKI,SACXC,EAAQL,EAAKM,aAAaC,MAEhC,OACI,gCACI,gBAAC,IAAD,CACIP,KAAMA,EACNC,SAAUA,EACVO,KAAK,WAET,gBAAC,IAAD,KACI,uBAAKZ,UAAU,aACX,0BAAQA,UAAU,cACd,gBAAC,IAAD,CAAOF,UAAWS,EAAIM,OACrBN,EAAIO,YAAc,yBAAIP,EAAIO,aAAmB,MAElD,2BAASd,UAAU,aACdS,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,gBAAC,KAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGtC,gBAAC,KAAD,CAAYV,YAAaA","file":"component---src-templates-tag-js-1481319f8b6a1f30cdc3.js","sourcesContent":["/**\n * @description      :\n * @author           :\n * @group            :\n * @created          : 25/06/2021 - 18:04:26\n *\n * MODIFICATION LOG\n * - Version         : 1.0.0\n * - Date            : 25/06/2021\n * - Author          :\n * - Modification    :\n **/\nimport React from 'react'\nimport { array, oneOf, PropTypes } from 'prop-types'\n\nimport \"./h1.scss\"\n\nconst Title = (props) => {\n    const { titletext } = props\n    const { bgtext } = props\n\n    return (\n        <>\n            <div className=\"bgtext\">{bgtext}</div>\n            <h1 className=\"title text-stroke-black\" data-wow-delay=\"100ms\" data-wow-duration=\"1000ms\">\n                {titletext}</h1>\n\n        </>\n    )\n}\n\nTitle.propTypes = {\n    titletext: PropTypes.string,\n}\nTitle.defaultProps = {\n    titletext: ``,\n\n}\n\nexport default Title\n\n","/**\n    * @description      :\n    * @author           :\n    * @group            :\n    * @created          : 02/07/2021 - 18:57:09\n    *\n    * MODIFICATION LOG\n    * - Version         : 1.0.0\n    * - Date            : 02/07/2021\n    * - Author          :\n    * - Modification    :\n**/\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport { PostCard, Pagination } from '../components/common'\nimport { MetaData } from '../components/common/meta'\nimport Title from \"../components/Titles/h1.js\"\n\n/**\n* Tag page (/tag/:slug)\n*\n* Loads all posts for the requested tag incl. pagination.\n*\n*/\nconst Tag = ({ data, location, pageContext }) => {\n    const tag = data.ghostTag\n    const posts = data.allGhostPost.edges\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"series\"\n            />\n            <Layout>\n                <div className=\"container\">\n                    <header className=\"tag-header\">\n                        <Title titletext={tag.name} />\n                        {tag.description ? <p>{tag.description}</p> : null }\n                    </header>\n                    <section className=\"post-feed\">\n                        {posts.map(({ node }) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <PostCard key={node.id} post={node} />\n                        ))}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nTag.propTypes = {\n    data: PropTypes.shape({\n        ghostTag: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            description: PropTypes.string,\n        }),\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default Tag\n\nexport const pageQuery = graphql`\n    query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\n        ghostTag(slug: { eq: $slug }) {\n            ...GhostTagFields\n        }\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] },\n            filter: {tags: {elemMatch: {slug: {eq: $slug}}}},\n            limit: $limit,\n            skip: $skip\n        ) {\n            edges {\n                node {\n                ...GhostPostFields\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}